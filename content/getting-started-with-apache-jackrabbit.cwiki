To get started with Jackrabbit you should first become familiar with the JCR API. Download the [JSR 170 specification|http://jcp.org/aboutJava/communityprocess/final/jsr170/index.html], browse the [API documentation|http://www.day.com/maven/jsr170/javadocs/jcr-1.0/], check our introduction to JCR levels,         or read some of the JCR articles to understand the content repository model that Jackrabbit implements.         You can also take a look at the various JCR and Jackrabbit applications to get an idea of what to do with a content repository.

 If you are interested in using Jackrabbit, you should check the Jackrabbit architecture and         try out the First Hops examples we         have prepared. You can either download a binary release or build Jackrabbit         from sources.

 Take a look at the Frequently Asked Questions or browse the         archives of the user and development mailing lists (see also the searchable archives at The Mail Archive, Gmane, and Nabble) for answers to questions not covered by the         documentation pages. See the Mailing Lists page if you want to         subscribe or unsubscribe the Jackrabbit mailing lists.

 Apache Jackrabbit is an open source project and welcomes all contributions.         You can participate by answering questions on the mailing list, filing bug reports for any problems or improvement ideas         you come up with, contributing to the Jackrabbit Wiki, or writing documentation and code. See the How the ASF works page for background         information on the Apache Software Foundation and the way we work.

h2. Content Repository for Java Technology API (JCR)

 Jackrabbit is a complete implementation of the JCR API, so the         primary API for Jackrabbit application developers is to be found         in the JCR section of the          Documentation.

h2. Jackrabbit architecture and Deployment Models

 Find out more about the Jackrabbit Architecture or         learn more about the Jackrabbit deployment Options be         it as an embedded content repository to be          delivered with you are application, a shared repository for example in a J2EE environment or a classical content repository server setup.

h2. Node Types

 To learn about the content modeling system used in Jackrabbit, read the section on node types.
